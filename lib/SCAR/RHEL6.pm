#!/usr/bin/perl
# ------------------------------------------------------------------------------
# NAME
#   SCAR::RHEL6
#
# DESCRIPTION
#   Performs SCAR initialization tasks specific to Red Hat 6
#
# SEE ALSO
#   SCAR SCAR::RHEL
#
# AUTHOR
#   Erik Bowman (erik.bowman@icsinc.com)
#
# ------------------------------------------------------------------------------

package SCAR::RHEL6;

# Standard pragmas
use utf8;
use strict;
use warnings FATAL => 'all';

# Standard modules
use FindBin;

# SCAR modules
use SCAR;

# Module version
our $VERSION = 0.01;

# ------------------------------------------------------------------------------
# SYNOPSIS
#   new
#
# DESCRIPTION
#
# ARGUMENTS
#
# ------------------------------------------------------------------------------

sub new {
    my ( $class, $templates, $temp ) = @_;
    my $self = bless {
        templates => $templates,
        temp      => $temp,
    }, $class;
    $self->ingest_sysctl_configuration;

    return $self;
}

# ------------------------------------------------------------------------------
# SYNOPSIS
#   check_configuration_file
#
# DESCRIPTION
#
# ------------------------------------------------------------------------------

sub ingest_sysctl_configuration {
    my ($self) = @_;
    open( my $fh, "<", "/etc/sysctl.conf" )
        || die "Unable to open file '/etc/sysctl.conf': $!\n";
    while ( my $line = <$fh> ) {
        if ( $line =~ /^(.*?)\s*=\s*(.*?)$/ ) {
            if ( defined $self->{sysctl}->{$1} ) {
                $self->{error}->{duplicate_entry}->{sysctl} = "$1 = $2";
            }
            $self->{sysctl}->{$1} = $2;
        }
    }
    close $fh;
}

# ------------------------------------------------------------------------------
# SYNOPSIS
#   check_configuration_file
#
# DESCRIPTION
#
# ------------------------------------------------------------------------------

sub heal_sysctl_configuration {
    my ( $self, $option, $value, $vuln_id, $severity, $rule_id, $stig_id,
        $rule_title )
        = @_;

    my $date_time    = SCAR->yyyymmdd . ' ' . SCAR->hhmmss;
    my $absolute_bin = File::Spec::Functions::catdir( $FindBin::Bin,
        $FindBin::RealScript );
    my $remediation = <<"REMEDIATION";
# ------------------------------------------------------------------------------
# SECURITY COMPLIANCE AND REMEDIATION
#   This entry was automatically generated by $absolute_bin on $date_time
#
# VULN ID
#   $vuln_id
#
# SEVERITY
#   $severity
#
# RULE ID
#   $rule_id
#
# STIG ID
#   $stig_id
#
# RULE TITLE
#   $rule_title
# ------------------------------------------------------------------------------
$option = $value
REMEDIATION

    my $healed = 0;
    my $tmp_file
        = File::Spec::Functions::catdir( $self->{temp}, "sysctl.conf" );
    open( my $output, ">", $tmp_file )
        || die "Unable to open file '/etc/sysctl.conf': $!\n";
    open( my $input, "<", "/etc/sysctl.conf" )
        || die "Unable to open file '/etc/sysctl.conf': $!\n";
    while ( my $line = <$input> ) {
        chomp $line;
        if ( $line =~ /^$option/ ) {
            print $output "$remediation\n";
            $healed = 1;
        }
        else {
            print $output "$line\n";
        }
    }
    print $output "$remediation\n" if !$healed;
    close $input;
    close $output;
    rename( $tmp_file, "/etc/sysctl.conf" );
    return $remediation;
}

# ------------------------------------------------------------------------------

1;

__END__
